{"version":3,"sources":["components/layout/SignedInLink.js","store/actions/authAction.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/projectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducers.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLink","state","console","log","firebase","links","uid","layout_SignedInLink","layout_SignedOutLink","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signup","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducers","error","rootReducer","combineReducers","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03b7d155.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink } from 'react-router-dom';\r\nimport {signOut} from '../../store/actions/authAction';\r\nimport {connect} from 'react-redux';\r\n\r\nconst SignedInLink =(props) =>{\r\n    return (\r\n        <ul className='right'>\r\n            <li> <NavLink to =\"/create\">New Project</NavLink></li>\r\n            <li> <a onClick ={props.signOut}>Log Out</a></li>\r\n            <li> <NavLink to =\"/\" className = 'btn btn-floating pink lighten-1'>\r\n                 {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\nconst mapDispatchToProps =(dispatch)=>{\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLink);\r\n","export const signIn = (credentials) =>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then (()=>{\r\n            dispatch({ type:'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch,getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'});\r\n        });\r\n    }\r\n}\r\n\r\nexport const signup = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp)=>{\r\n            return firestore.collection('user').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch(err =>{\r\n            dispatch({ type: 'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n\r\n}","import React from 'react';\r\nimport {NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLink =() =>{\r\n    return (\r\n        <ul className='right'>\r\n            <li> <NavLink to =\"/signup\">Signup</NavLink></li>\r\n            <li> <NavLink to =\"/signin\">Log In</NavLink></li>\r\n           \r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLink;\r\n","import React from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport SignedInLink from './SignedInLink';\r\nimport SignedOutLink from './SignedOutLink';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth, profile} = props;\r\n  const links = auth.uid ?<SignedInLink profile={profile}/> : <SignedOutLink />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to = '/' className = 'brand-logo'> Mario Plan</Link>\r\n               {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\n    return {\r\n        auth:state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n//use moments for date\r\nconst Notifications =(props) =>{\r\n    const {notifications} = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className = \"notifications\">\r\n                       {notifications && notifications.map(item =>{\r\n                           return (\r\n                               <li key = {item.id}>\r\n                                   <span className= \"pink-text\"> {item.user} </span>\r\n                                   <span> {item.content}</span>\r\n                                   <div className = \"grey-text note-date\">\r\n                                       {moment(item.time.toDate()).fromNow()}\r\n                                   </div>\r\n                               </li>\r\n                           )\r\n                       })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Notifications;","import React from 'react';\r\n\r\n//use moment for date\r\n\r\nconst ProjectSummary = ({project}) =>{\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n                <div className=\"card-content grey-text text-darken-3\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p> Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                    <p className='grey-text'> {project.createdAt.toDate().toString()} </p>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link } from 'react-router-dom';\r\n\r\n\r\nconst ProjectList = ({projects}) =>{\r\n\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to = {'/project/' + project.id}  key ={project.id}>\r\n                    <ProjectSummary project = {project} key ={project.id}/>\r\n                    </Link>\r\n                )\r\n            })}\r\n       \r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/projectList';\r\nimport {connect } from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose } from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\n\r\n\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const {projects, auth, notifications} = this.props;\r\n\r\n    if(!auth.uid) return <Redirect to= '/Signin' />\r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n              <div className=\"col s12 m6\">\r\n                  <ProjectList projects={projects} />\r\n              </div>\r\n              <div className=\"col s12 m5 offset-m1\">\r\n                  <Notifications notifications= {notifications}/>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state);\r\nreturn {\r\n    projects:state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n}\r\n}\r\nexport default compose (\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit:3, orderBy: ['time', 'desc']}\r\n    ])\r\n\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nfunction ProjectDetails(props) {\r\n    \r\n   const {project,auth} = props;\r\n\r\n   if(!auth.uid) return <Redirect to= '/Signin' />\r\n   if (project){\r\n       return (\r\n       <div>\r\n      <div className=\"container section project-details\">\r\n          <div className=\"card z-depth-0\">\r\n              <div className=\"card-content\">\r\n                  <span className=\"card-title\">{project.title}</span>\r\n                  <p>{project.content}</p>\r\n              </div>\r\n              <div className=\"card-action grey lighten-4 grey-text\">\r\n                  <div> Posted By {project.authorFirstName} {project.authorLastName}</div>\r\n                  <div> {project.createdAt.toDate().toString()}</div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    </div>\r\n       )\r\n   } else{\r\n    return (\r\n        <div className=\"container\">\r\n            <p> Loading project ...</p>\r\n        </div>\r\n        )\r\n\r\n   }\r\n  \r\n}\r\n\r\nconst mapStateToProps =(state,ownProps) =>{\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n\r\n    return{\r\n        project:project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {collection: 'projects'}\r\n    ])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport {connect } from 'react-redux';\r\nimport {signIn} from '../../store/actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state ={\r\n        email:'',\r\n        password: ''\r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n     this.setState({\r\n        [e.target.id]: e.target.value\r\n     })\r\n        \r\n    }\r\n    handleSubmit = (e) =>{\r\n       e.preventDefault();\r\n      this.props.signIn(this.state);\r\n    }\r\n  render() {\r\n      const {authError, auth} = this.props;\r\n      if(auth.uid) return <Redirect to= '/' />\r\n\r\n    return (\r\n      <div className = 'container'>\r\n        <form onSubmit = {this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\"> Sign In</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'email'> Email</label>\r\n                <input type = 'email' id= 'email'onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'password'> Password</label>\r\n                <input type = 'password' id= 'password' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className = \"input-field\" > \r\n                <button className=\"btn pink ligthen-1 z-depth-0\">Log In</button>\r\n                <div className=\"red-text-center\">\r\n                    {authError ? <p>{authError}</p>: null}\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signIn: (creds) =>dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signup} from '../../store/actions/authAction';\r\n\r\nclass SignUp extends Component {\r\n    state ={\r\n        email:'',\r\n        password: '',\r\n        firstName:'',\r\n        lastName:''\r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n     this.setState({\r\n        [e.target.id]: e.target.value\r\n     })\r\n        \r\n    }\r\n    handleSubmit = (e) =>{\r\n       e.preventDefault();\r\n       this.props.signup(this.state)\r\n      \r\n    }\r\n  render() {\r\n    const { authError, auth} = this.props;\r\n    if(auth.uid) return <Redirect to= '/' />\r\n\r\n    return (\r\n      <div className = 'container'>\r\n        <form onSubmit = {this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\"> Sign Up</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'email'> Email</label>\r\n                <input type = 'email' id= 'email'onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'password'> Password</label>\r\n                <input type = 'password' id= 'password' onChange={this.handleChange}/>\r\n            </div>\r\n          \r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'firstName'> FirstName</label>\r\n                <input type = 'text' id= 'firstName' onChange={this.handleChange}/>\r\n            </div>\r\n     \r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'lastName'> LastName</label>\r\n                <input type = 'text' id= 'lastName' onChange={this.handleChange}/>\r\n            </div>\r\n            <div className = \"input-field\" > \r\n                <button className=\"btn pink ligthen-1 z-depth-0\">Sign Up</button>\r\n                <div className=\"red-text center\">\r\n                    {authError ? <p>{authError}</p>: null}\r\n                </div>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps =(state) =>{\r\n    return{\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps =(dispatch) =>{\r\n    return {\r\n        signup: (newUser) => dispatch(signup(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state ={\r\n        title:'',\r\n        content: ''\r\n\r\n    }\r\n\r\n    handleChange = (e) =>{\r\n     this.setState({\r\n        [e.target.id]: e.target.value\r\n     })\r\n        \r\n    }\r\n    handleSubmit = (e) =>{\r\n       e.preventDefault();\r\n       this.props.createProject(this.state)\r\n       this.props.history.push('/');\r\n    }\r\n  render() {\r\n      const {auth } = this.props;  \r\n    if(!auth.uid) return <Redirect to= '/Signin' />\r\n    return (\r\n      <div className = 'container'>\r\n        <form onSubmit = {this.handleSubmit} className=\"white\">\r\n            <h5 className=\"grey-text text-darken-3\"> Create New Project</h5>\r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'title'> Title</label>\r\n                <input type = 'text' id= 'title'onChange={this.handleChange}/>\r\n            </div>\r\n            <div className=\"input-field\">\r\n                <label htmlFor= 'content'> Project Content</label>\r\n               <textarea  id=\"content\"  className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n            </div>\r\n            <div className = \"input-field\" > \r\n                <button className=\"btn pink ligthen-1 z-depth-0\">Create Project</button>\r\n            </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) =>{\r\n     return (dispatch, getState,{getFirebase, getFirestore}) =>{\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n       // const profile= getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: \"Gbenro\",// hard coded, need to fix profile\r\n            authorLastName: \"Adesoye\",\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(()=> {\r\n            dispatch({type: 'CREATE_PROJECT', project}); \r\n        }).catch((err)=>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err});\r\n        } )\r\n\r\n     } \r\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Switch,Route} from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch> \n          <Route exact path = '/' component= {Dashboard} />\n          <Route path ='/project/:id' component= {ProjectDetails} />   \n          <Route path= '/Signin' component = {SignIn} />\n          <Route path= '/Signup' component = {SignUp} />\n          <Route path= '/create' component = {CreateProject} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n\r\n\r\nconst initState ={\r\n    authError: null\r\n}\r\nconst authReducer = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n        console.log('login error')\r\n        return {\r\n            ...state, \r\n            authError: 'Login Failed'\r\n        }\r\n        case'LOGIN_SUCCESS':\r\n        console.log('login suceess')\r\n        return {\r\n            ...state,\r\n            authError: null\r\n        }\r\n        case 'SIGNOUT_SUCCESS':\r\n        console.log('signout success');\r\n        return state;\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError:null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n        console.log('signup error');\r\n        return {\r\n            ...state,\r\n            authError:action.err.message\r\n        }\r\n        default:\r\n        return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","\r\n\r\nconst initState ={\r\n\r\n    projects:[\r\n        {id:'1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id:'2', title: 'Hey, How can I help you', content: 'blah blah blah'},\r\n        {id:'3', title: 'What to do when?', content: 'blah blah blah'}\r\n    ]\r\n}\r\nconst projectReducers = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.error);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default projectReducers;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducers';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  // Initialize Firebase\r\n  var config = {\r\n    apiKey: \"AIzaSyBPETWzlWtmQG7nK6kxKBNHpxziKNVffMY\",\r\n    authDomain: \"marioplan-6b366.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-6b366.firebaseio.com\",\r\n    projectId: \"marioplan-6b366\",\r\n    storageBucket: \"marioplan-6b366.appspot.com\",\r\n    messagingSenderId: \"681022325742\"\r\n  };\r\n  firebase.initializeApp(config);\r\n  firebase.firestore().settings({timestampsInSnapshots:true });\r\n\r\n\r\n  export default firebase;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore} from 'redux-firestore';\nimport { getFirebase, reactReduxFirebase} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\n\n\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase,getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile:'users', attachAuthIsReady: true})\n    )\n    );\n\n    store.firebaseAuthIsReady.then(() =>{\n        ReactDOM.render(<Provider store= {store}><App /></Provider>, document.getElementById('root'));\n    })\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}